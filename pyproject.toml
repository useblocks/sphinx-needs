[tool.poetry]
name = "sphinx-needs"

# !! Don't miss updates in needs.py, conf.py, changelog.rst, and .github/workflows/docker !!!
version = "1.3.0"

description = "Sphinx needs extension for managing needs/requirements and specifications"
authors = ["team useblocks <info@useblocks.com>"]
license = "MIT"
readme = "README.rst"
repository = "http://github.com/useblocks/sphinx-needs"
documentation = "https://sphinx-needs.readthedocs.io/en/latest/"
classifiers=[
        'Development Status :: 5 - Production/Stable',
        'Intended Audience :: Developers',
        'License :: OSI Approved :: MIT License',
        'Operating System :: OS Independent',
        'Programming Language :: Python',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.7',
        'Programming Language :: Python :: 3.8',
        'Programming Language :: Python :: 3.9',
        'Programming Language :: Python :: 3.10',
        'Topic :: Documentation',
        'Topic :: Utilities',
        'Framework :: Sphinx :: Extension',
    ]

packages = [
    {include = "sphinx_needs"}
]


[tool.poetry.dependencies]
python = ">=3.7.0,<4.0"
sphinx = ">=5.0"
docutils = ">=0.15"

matplotlib = ">=3.3.0"  # needpie
requests-file = "^1.5.1"  # external links
requests = "^2.25.1"  # external_links
jsonschema = ">=3.2.0"  # needsimport schema validation
sphinx-data-viewer = "^0.1.1"  # needservice debug output

[tool.poetry.dev-dependencies]
sphinxcontrib-plantuml = "^0"
pre-commit = "^2"
# test dependencies
lxml = "^4.6.5"
pytest = "^7"
pytest-xdist="*"  # parallelisation
syrupy = ">=3,<5"
responses = "^0.22.0"
requests-mock = ">=1.9.3"
tabulate = "^0.9.0"

# type checking
mypy = "^0.991"
types-requests = "^2.27.25"
types-setuptools = "^65.6.0.2"
docutils-stubs = "^0.0.22"

# formatting dependencies
black = "^22.3"
isort = "^5.7.0"

# pyparsing 3.0.5 does not work with current "packaging" lib
pyparsing = "^3.0.9"  # 3.0.5 error: https://github.com/pyparsing/pyparsing/issues/329
pytest-benchmark = "^4.0.0"
memray = "^1.3.1"

# package version compare, in case setuptools not available
packaging = "*"

[tool.pytest.ini_options]
asyncio_mode= "auto"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.mypy]
files = "sphinx_needs"
strict = true
show_error_codes = true
implicit_reexport = true
namespace_packages = true
disallow_any_generics = true
disallow_subclassing_any = true
# disallow_any_unimported = true
# disallow_any_explicit = true
# disallow_any_expr = true
# disallow_any_decorated = true

[[tool.mypy.overrides]]
module = [
  "matplotlib.*",
  "numpy.*",
  "requests_file",
  "sphinx_data_viewer.*",
  "sphinxcontrib.plantuml.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
  'sphinx_needs.api.need',
  'sphinx_needs.directives.needuml',
]
ignore_errors = true

[[tool.mypy.overrides]]
module = [
  "sphinx_needs.directives.needextend",
  "sphinx_needs.functions.functions",
]
# TODO dynamically overriding TypeDict keys is a bit tricky
disable_error_code = "literal-required"

[[tool.mypy.overrides]]
module = [
  "sphinx_needs.data"
]
disable_error_code = ["attr-defined", "no-any-return"]


[build-system]
requires = ["setuptools", "poetry_core>=1.0.8"]  # setuptools for deps like plantuml
build-backend = "poetry.core.masonry.api"

