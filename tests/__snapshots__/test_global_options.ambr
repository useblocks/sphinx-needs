# serializer version: 1
# name: test_doc_global_option[test_app0]
  dict({
    'avatar': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'bad_value_type': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'closed_at': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'collapse': dict({
      'default': FieldLiteralValue(value=True),
      'predicate_defaults': tuple(
      ),
    }),
    'completion': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'constraints': dict({
      'default': FieldLiteralValue(value=[]),
      'predicate_defaults': tuple(
      ),
    }),
    'created_at': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'duration': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'hide': dict({
      'default': FieldLiteralValue(value=False),
      'predicate_defaults': tuple(
      ),
    }),
    'id_prefix': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'layout': dict({
      'default': FieldLiteralValue(value='clean_l'),
      'predicate_defaults': tuple(
      ),
    }),
    'link1': dict({
      'default': LinksLiteralValue(value=['SPEC_1']),
      'predicate_defaults': tuple(
      ),
    }),
    'link2': dict({
      'default': LinksLiteralValue(value=['SPEC_1']),
      'predicate_defaults': tuple(
        tuple(
          'status == "implemented"',
          LinksLiteralValue(value=['SPEC_2', "[[copy('link1')]]"]),
        ),
        tuple(
          'status == "closed"',
          LinksLiteralValue(value=['SPEC_3']),
        ),
      ),
    }),
    'link3': dict({
      'default': LinksLiteralValue(value=[]),
      'predicate_defaults': tuple(
      ),
    }),
    'links': dict({
      'default': LinksLiteralValue(value=[]),
      'predicate_defaults': tuple(
      ),
    }),
    'max_amount': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'max_content_lines': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'option_1': dict({
      'default': FieldLiteralValue(value='test_global'),
      'predicate_defaults': tuple(
      ),
    }),
    'option_2': dict({
      'default': FieldFunctionArray(value=(DynamicFunctionParsed(name='copy', args=('id',), kwargs=()),)),
      'predicate_defaults': tuple(
      ),
    }),
    'option_3': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
        tuple(
          'status == "implemented"',
          FieldLiteralValue(value='STATUS_IMPL'),
        ),
      ),
    }),
    'option_4': dict({
      'default': FieldLiteralValue(value='STATUS_UNKNOWN'),
      'predicate_defaults': tuple(
        tuple(
          'status == "closed"',
          FieldLiteralValue(value='STATUS_CLOSED'),
        ),
      ),
    }),
    'option_5': dict({
      'default': FieldLiteralValue(value='final'),
      'predicate_defaults': tuple(
        tuple(
          'status == "implemented"',
          FieldLiteralValue(value='STATUS_IMPL'),
        ),
        tuple(
          'status == "closed"',
          FieldLiteralValue(value='STATUS_CLOSED'),
        ),
      ),
    }),
    'params': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'parent_needs': dict({
      'default': LinksLiteralValue(value=[]),
      'predicate_defaults': tuple(
      ),
    }),
    'post_template': dict({
      'default': None,
      'predicate_defaults': tuple(
      ),
    }),
    'pre_template': dict({
      'default': None,
      'predicate_defaults': tuple(
      ),
    }),
    'prefix': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'query': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'service': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'specific': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'status': dict({
      'default': None,
      'predicate_defaults': tuple(
      ),
    }),
    'style': dict({
      'default': None,
      'predicate_defaults': tuple(
      ),
    }),
    'tags': dict({
      'default': FieldLiteralValue(value=['d']),
      'predicate_defaults': tuple(
        tuple(
          'status == "implemented"',
          FieldLiteralValue(value=['a', 'b']),
        ),
        tuple(
          'status == "closed"',
          FieldLiteralValue(value=['c']),
        ),
      ),
    }),
    'template': dict({
      'default': None,
      'predicate_defaults': tuple(
      ),
    }),
    'title': dict({
      'default': None,
      'predicate_defaults': tuple(
      ),
    }),
    'too_many_params': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'updated_at': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'url': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'url_postfix': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
    'user': dict({
      'default': FieldLiteralValue(value=''),
      'predicate_defaults': tuple(
      ),
    }),
  })
# ---
# name: test_doc_global_option[test_app0].1
  dict({
    'current_version': '',
    'versions': dict({
      '': dict({
        'needs': dict({
          'SPEC_1': dict({
            'collapse': True,
            'docname': 'index',
            'external_css': 'external_link',
            'id': 'SPEC_1',
            'layout': 'clean_l',
            'lineno': 4,
            'link1': list([
              'SPEC_1',
            ]),
            'link1_back': list([
              'SPEC_1',
              'SPEC_2',
              'SPEC_3',
            ]),
            'link2': list([
              'SPEC_2',
              'SPEC_1',
            ]),
            'link2_back': list([
              'SPEC_1',
              'SPEC_3',
            ]),
            'option_1': 'other',
            'option_2': 'SPEC_1',
            'option_3': 'STATUS_IMPL',
            'option_4': 'STATUS_UNKNOWN',
            'option_5': 'STATUS_IMPL',
            'section_name': 'GLOBAL OPTIONS',
            'sections': list([
              'GLOBAL OPTIONS',
            ]),
            'status': 'implemented',
            'tags': list([
              'a',
              'b',
            ]),
            'title': 'Specification 1',
            'type': 'spec',
            'type_name': 'Specification',
          }),
          'SPEC_2': dict({
            'collapse': True,
            'docname': 'index',
            'external_css': 'external_link',
            'id': 'SPEC_2',
            'layout': 'clean_l',
            'lineno': 9,
            'link1': list([
              'SPEC_1',
            ]),
            'link2': list([
              'SPEC_3',
            ]),
            'link2_back': list([
              'SPEC_1',
            ]),
            'option_1': 'test_global',
            'option_2': 'SPEC_2',
            'option_4': 'STATUS_CLOSED',
            'option_5': 'STATUS_CLOSED',
            'parent_needs_back': list([
              'SPEC_3',
            ]),
            'section_name': 'GLOBAL OPTIONS',
            'sections': list([
              'GLOBAL OPTIONS',
            ]),
            'status': 'closed',
            'tags': list([
              'c',
            ]),
            'title': 'Specification 2',
            'type': 'spec',
            'type_name': 'Specification',
          }),
          'SPEC_3': dict({
            'docname': 'index',
            'external_css': 'external_link',
            'hide': True,
            'id': 'SPEC_3',
            'layout': 'clean_l',
            'lineno': 13,
            'link1': list([
              'SPEC_1',
            ]),
            'link2': list([
              'SPEC_1',
            ]),
            'link2_back': list([
              'SPEC_2',
            ]),
            'option_1': 'test_global',
            'option_2': 'SPEC_3',
            'option_4': 'STATUS_UNKNOWN',
            'option_5': 'final',
            'parent_need': 'SPEC_2',
            'parent_needs': list([
              'SPEC_2',
            ]),
            'section_name': 'GLOBAL OPTIONS',
            'sections': list([
              'GLOBAL OPTIONS',
            ]),
            'status': 'other',
            'tags': list([
              'd',
            ]),
            'title': 'Specification 3',
            'type': 'spec',
            'type_name': 'Specification',
          }),
        }),
        'needs_amount': 3,
        'needs_defaults_removed': True,
      }),
    }),
  })
# ---
