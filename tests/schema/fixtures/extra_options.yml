no_schema:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :asil: QM
  warnings: []

beta_warn_for_extra_option:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
    schema.type = "string"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :asil: QM
  warnings:
    - - "Schema interface and validation are still in beta"
      - "Interface and validation logic may change when moving to a typed core implementation"
      - sphinx8: ["needs.beta"]

set_type_string:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
    schema.type = "string"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :asil: QM
  warnings: []

auto_inject_string:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
    schema.enum = ["QM"]
  rst: |
    .. impl:: title
        :id: IMPL_1
        :asil: QM
  warnings: []

wrong_type:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
    schema.type = "integer"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :asil: QM
  warnings:
    - - "Severity # violation"
      - "Field # asil"
      - "Need path # IMPL_1"
      - "Schema message # Field 'asil': cannot coerce 'QM' to integer"
      - sphinx8: ["sn_schema.extra_option_type_error"]

const:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    needs_schema_definitions_from_json = "schemas.json"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :asil: QM
  schemas:
    $defs: []
    schemas:
      - validate:
          local:
            properties:
              asil:
                type: string
                const: QM
  warnings: []

const_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    needs_schema_definitions_from_json = "schemas.json"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :asil: A
  schemas:
    $defs: []
    schemas:
      - validate:
          local:
            properties:
              asil:
                type: string
                const: QM
  warnings:
    - - "Severity # violation"
      - "Field # asil"
      - "Need path # IMPL_1"
      - "Schema path # [0] > local > properties > asil > const"
      - "Schema message # 'QM' was expected"
      - sphinx8: ["sn_schema.local_fail"]

enum:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    needs_schema_definitions_from_json = "schemas.json"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :asil: QM
  schemas:
    $defs: []
    schemas:
      - validate:
          local:
            properties:
              asil:
                type: string
                enum: ["QM", "A", "B", "C", "D"]
  warnings: []

enum_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    needs_schema_definitions_from_json = "schemas.json"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :asil: E
  schemas:
    $defs: []
    schemas:
      - validate:
          local:
            properties:
              asil:
                type: string
                enum: ["QM", "A", "B", "C", "D"]
  warnings:
    - - "Severity # violation"
      - "Field # asil"
      - "Need path # IMPL_1"
      - "Schema path # [0] > local > properties > asil > enum"
      - "Schema message # 'E' is not one of ['QM', 'A', 'B', 'C', 'D']"
      - sphinx8: ["sn_schema.local_fail"]

auto_inject_type:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    needs_schema_definitions_from_json = "schemas.json"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :asil: QM
  schemas:
    $defs: []
    schemas:
      - validate:
          local:
            properties:
              asil:
                const: QM
  warnings: []

required:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    needs_schema_definitions_from_json = "schemas.json"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :asil: QM
  schemas:
    $defs: []
    schemas:
      - validate:
          local:
            required: ["asil"]
  warnings: []

required_missing:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    needs_schema_definitions_from_json = "schemas.json"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
  rst: |
    .. impl:: title
        :id: IMPL_1
  schemas:
    $defs: []
    schemas:
      - validate:
          local:
            required: ["asil"]
  warnings:
    - - "Severity # violation"
      - "Field # asil"
      - "Need path # IMPL_1"
      - "Schema path # [0] > local > required"
      - "Schema message # 'asil' is a required property"
      - sphinx8: ["sn_schema.local_fail"]

auto_inject_type_wrong_const:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    needs_schema_definitions_from_json = "schemas.json"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :asil: A
  schemas:
    $defs: []
    schemas:
      - validate:
          local:
            properties:
              asil:
                const: QM
  warnings:
    - - "Severity # violation"
      - "Field # asil"
      - "Need path # IMPL_1"
      - "Schema path # [0] > local > properties > asil > const"
      - "Schema message # 'QM' was expected"
      - sphinx8: ["sn_schema.local_fail"]

required_based_on_select_field_missing:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    needs_schema_definitions_from_json = "schemas.json"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
    [[needs.extra_options]]
    name = "efforts"
    schema.type = "integer"
  rst: |
    .. impl:: title
        :id: IMPL_1
  schemas:
    $defs: []
    schemas:
      - select:
          properties:
            efforts:
              minimum: 15
          required: ["efforts"]
        validate:
          local:
            required: ["asil"]
  warnings: []

required_based_on_select_field_below_threshold:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    needs_schema_definitions_from_json = "schemas.json"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
    [[needs.extra_options]]
    name = "efforts"
    schema.type = "integer"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :efforts: 14
  schemas:
    $defs: []
    schemas:
      - select:
          properties:
            efforts:
              minimum: 15
          required: ["efforts"]
        validate:
          local:
            required: ["asil"]
  warnings: []

required_based_on_select_field_over_threshold:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    needs_schema_definitions_from_json = "schemas.json"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
    [[needs.extra_options]]
    name = "efforts"
    schema.type = "integer"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :efforts: 15
  schemas:
    $defs: []
    schemas:
      - select:
          properties:
            efforts:
              minimum: 15
          required: ["efforts"]
        validate:
          local:
            required: ["asil"]
  warnings:
    - - "Severity # violation"
      - "Need path # IMPL_1"
      - "Schema path # [0] > local > required"
      - "Schema message # 'asil' is a required property"
      - sphinx8: ["sn_schema.local_fail"]

string_type:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "asil"
    schema.type = "string"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :asil: QM
  warnings: []

string_format_date:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "start_date"
    schema.type = "string"
    schema.format = "date"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :start_date: 2023-01-01
  warnings: []

string_format_date_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "start_date"
    schema.type = "string"
    schema.format = "date"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :start_date: not-a-date
  warnings:
    - - "Severity # violation"
      - "Field # start_date"
      - "Need path # IMPL_1"
      - "Schema path # extra_options > schema > properties > start_date > format"
      - "Schema message # 'not-a-date' is not a 'date'"
      - sphinx8: ["sn_schema.extra_option_fail"]

string_format_date_time:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "start_date"
    schema.type = "string"
    schema.format = "date-time"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :start_date: 2023-01-01T00:00:00Z
  warnings: []

string_format_date_time_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "start_date"
    schema.type = "string"
    schema.format = "date-time"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :start_date: 2025-07-1099:99:99Z
  warnings:
    - - "Severity # violation"
      - "Field # start_date"
      - "Need path # IMPL_1"
      - "Schema path # extra_options > schema > properties > start_date > format"
      - "Schema message # '2025-07-1099:99:99Z' is not a 'date-time'"
      - sphinx8: ["sn_schema.extra_option_fail"]

string_format_time:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "time"
    schema.type = "string"
    schema.format = "time"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :time: 23:12:13
  warnings: []

string_format_time_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "time"
    schema.type = "string"
    schema.format = "time"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :time: 26:12:13
  warnings:
    - - "Severity # violation"
      - "Field # time"
      - "Need path # IMPL_1"
      - "Schema path # extra_options > schema > properties > time > format"
      - "Schema message # '26:12:13' is not a 'time'"
      - sphinx8: ["sn_schema.extra_option_fail"]

string_format_duration:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "start_date"
    schema.type = "string"
    schema.format = "duration"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :start_date: P1Y2M10DT2H30M
  warnings: []

string_format_duration_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "duration"
    schema.type = "string"
    schema.format = "duration"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :duration: P1Q2Q10DT2H30M
  warnings:
    - - "Severity # violation"
      - "Field # duration"
      - "Need path # IMPL_1"
      - "Schema path # extra_options > schema > properties > duration > format"
      - "Schema message # 'P1Q2Q10DT2H30M' is not a 'duration'"
      - sphinx8: ["sn_schema.extra_option_fail"]

string_format_email:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "email"
    schema.type = "string"
    schema.format = "email"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :email: test@example.com
  warnings: []

string_format_email_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "email"
    schema.type = "string"
    schema.format = "email"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :email: not-a-mail
  warnings:
    - - "Severity # violation"
      - "Field # email"
      - "Need path # IMPL_1"
      - "Schema path # extra_options > schema > properties > email > format"
      - "Schema message # 'not-a-mail' is not a 'email'"
      - sphinx8: ["sn_schema.extra_option_fail"]

string_format_uri:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "uri"
    schema.type = "string"
    schema.format = "uri"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :uri: https:://example.com
  warnings: []

string_format_uri_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "uri"
    schema.type = "string"
    schema.format = "uri"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :uri: examplecom
  warnings:
    - - "Severity # violation"
      - "Field # uri"
      - "Need path # IMPL_1"
      - "Schema path # extra_options > schema > properties > uri > format"
      - "Schema message # 'examplecom' is not a 'uri'"
      - sphinx8: ["sn_schema.extra_option_fail"]

string_format_uuid:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "uuid"
    schema.type = "string"
    schema.format = "uuid"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :uuid: 123e4567-e89b-12d3-a456-426614174000
  warnings: []

string_format_uuid_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "uuid"
    schema.type = "string"
    schema.format = "uuid"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :uuid: deadbeef-deadbeef-deadbeef-deadbeef
  warnings:
    - - "Severity # violation"
      - "Field # uuid"
      - "Need path # IMPL_1"
      - "Schema path # extra_options > schema > properties > uuid > format"
      - "Schema message # 'deadbeef-deadbeef-deadbeef-deadbeef' is not a 'uuid'"
      - sphinx8: ["sn_schema.extra_option_fail"]

coerce_to_integer:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "efforts1"
    schema.type = "integer"
    [[needs.extra_options]]
    name = "efforts2"
    schema.type = "integer"
    [[needs.extra_options]]
    name = "efforts3"
    schema.type = "integer"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :efforts1: 1
        :efforts2: 0
        :efforts3: -1
  warnings: []

integer_multiple_of:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "efforts1"
    schema.type = "integer"
    schema.multipleOf = 3
    [[needs.extra_options]]
    name = "efforts2"
    schema.type = "integer"
    schema.multipleOf = -1
    [[needs.extra_options]]
    name = "efforts3"
    schema.type = "integer"
    schema.multipleOf = -1
  rst: |
    .. impl:: title
        :id: IMPL_1
        :efforts1: 9
        :efforts2: -4
        :efforts3: 4
  warnings: []

integer_multiple_of_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "efforts"
    schema.type = "integer"
    schema.multipleOf = 3
  rst: |
    .. impl:: title
        :id: IMPL_1
        :efforts: 8
  warnings:
    - - "Severity # violation"
      - "Field # efforts"
      - "Need path # IMPL_1"
      - "Schema path # extra_options > schema > properties > efforts > multipleOf"
      - "Schema message # 8 is not a multiple of 3"
      - sphinx8: ["sn_schema.extra_option_fail"]

number_multiple_of:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "efforts1"
    schema.type = "number"
    schema.multipleOf = 3.3
    [[needs.extra_options]]
    name = "efforts2"
    schema.type = "number"
    schema.multipleOf = -1.1
    [[needs.extra_options]]
    name = "efforts3"
    schema.type = "number"
    schema.multipleOf = 1.2
  rst: |
    .. impl:: title
        :id: IMPL_1
        :efforts1: 6.6
        :efforts2: 4.4
        :efforts3: -2.4
  warnings: []

number_multiple_of_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "efforts"
    schema.type = "number"
    schema.multipleOf = 3.3
  rst: |
    .. impl:: title
        :id: IMPL_1
        :efforts: 5.0
  warnings:
    - - "Severity # violation"
      - "Field # efforts"
      - "Need path # IMPL_1"
      - "Schema path # extra_options > schema > properties > efforts > multipleOf"
      - "Schema message # 5.0 is not a multiple of 3.3"
      - sphinx8: ["sn_schema.extra_option_fail"]

coerce_to_integer_from_string_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "efforts"
    schema.type = "integer"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :efforts: QM
  warnings:
    - - "Severity # violation"
      - "Field # efforts"
      - "Need path # IMPL_1"
      - "Schema path # extra_options > schema"
      - "Schema message # Field 'efforts': cannot coerce 'QM' to integer"
      - sphinx8: ["sn_schema.extra_option_type_error"]

coerce_to_number:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "efforts1"
    schema.type = "number"
    [[needs.extra_options]]
    name = "efforts2"
    schema.type = "number"
    [[needs.extra_options]]
    name = "efforts3"
    schema.type = "number"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :efforts1: 1.0
        :efforts2: 0
        :efforts3: -1.2
  warnings: []

coerce_to_number_from_string_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "efforts"
    schema.type = "number"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :efforts: QM
  warnings:
    - - "Severity # violation"
      - "Field # efforts"
      - "Need path # IMPL_1"
      - "Schema path # extra_options > schema"
      - "Schema message # Field 'efforts': cannot coerce 'QM' to number"
      - sphinx8: ["sn_schema.extra_option_type_error"]

coerce_to_integer_from_float_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "efforts"
    schema.type = "integer"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :efforts: 1.2
  warnings:
    - - "Severity # violation"
      - "Field # efforts"
      - "Need path # IMPL_1"
      - "Schema path # extra_options > schema"
      - "Schema message # Field 'efforts': cannot coerce '1.2' to integer"
      - sphinx8: ["sn_schema.extra_option_type_error"]

coerce_to_boolean:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "accepted"
    schema.type = "boolean"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :accepted: True

    .. impl:: title
        :id: IMPL_2
        :accepted: true

    .. impl:: title
        :id: IMPL_3
        :accepted: false

    .. impl:: title
        :id: IMPL_4
        :accepted: False

    .. impl:: title
        :id: IMPL_5
        :accepted: yes

    .. impl:: title
        :id: IMPL_6
        :accepted: Yes

    .. impl:: title
        :id: IMPL_7
        :accepted: no

    .. impl:: title
        :id: IMPL_8
        :accepted: No

    .. impl:: title
        :id: IMPL_9
        :accepted: 1

    .. impl:: title
        :id: IMPL_10
        :accepted: 0

    .. impl:: title
        :id: IMPL_11
        :accepted: on

    .. impl:: title
        :id: IMPL_12
        :accepted: On

    .. impl:: title
        :id: IMPL_13
        :accepted: off

    .. impl:: title
        :id: IMPL_14
        :accepted: Off
  warnings: []

coerce_to_boolean_from_string_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "approved"
    schema.type = "boolean"
  rst: |
    .. impl:: title
        :id: IMPL_1
        :approved: not-a-boolean
  warnings:
    - - "Severity # violation"
      - "Field # approved"
      - "Need path # IMPL_1"
      - "Schema path # extra_options > schema"
      - "Schema message # Field 'approved': cannot coerce 'not-a-boolean' to boolean"
      - sphinx8: ["sn_schema.extra_option_type_error"]

default_accepted:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_options]]
    name = "efforts1"
    schema.type = "number"
    schema.default = 0
    [[needs.extra_options]]
    name = "efforts2"
    schema.type = "string"
    schema.default = "high"
    [[needs.extra_options]]
    name = "approved"
    schema.type = "boolean"
    schema.default = false
  rst: |
    .. impl:: title
        :id: IMPL_1
        :efforts1: 6.6
        :efforts2: 4.4
        :approved: true

    .. impl:: title
        :id: IMPL_2
        :efforts1: 6.6
        :efforts2: 4.4
  warnings: []
