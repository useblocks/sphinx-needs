beta_warn_for_extra_link:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
  ubproject: |
    [[needs.extra_links]]
    option = "links"
    outgoing = "links"
    incoming = "linked by"
    schema.minItems = 1
  rst: |
    .. spec:: title
        :id: SPEC_1

    .. impl:: title
        :id: IMPL_1
        :links: SPEC_1
  warnings:
    - - "Schema interface and validation are still in beta"
      - "Interface and validation logic may change when moving to a typed core implementation"
      - sphinx8: ["needs.beta"]

inject_array:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_links]]
    option = "links"
    outgoing = "links"
    incoming = "linked by"
    schema.minItems = 2
  rst: |
    .. spec:: title
        :id: SPEC_1

    .. impl:: title
        :id: IMPL_1
        :links: SPEC_1
  warnings:
    - - "Severity # violation"
      - "Field # links"
      - "Need path # IMPL_1"
      - "Schema path # extra_links > schema > properties > links > minItems"
      - "Schema message # ['SPEC_1'] is too short"
      - sphinx8: ["sn_schema.extra_link_fail"]

items_pattern:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_links]]
    option = "links"
    outgoing = "links"
    incoming = "linked by"
    schema.items = { type = "string", pattern = "^[A-Z0-9_]{3,}" }
  rst: |
    .. spec:: title
        :id: SPEC_1

    .. impl:: title
        :id: IMPL_1
        :links: SPEC_1
  warnings: []

items_pattern_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_links]]
    option = "links"
    outgoing = "links"
    incoming = "linked by"
    schema.items = { type = "string", pattern = "^[A-Z0-9_]{10,}" }
  rst: |
    .. spec:: title
        :id: SPEC_1

    .. impl:: title
        :id: IMPL_1
        :links: SPEC_1
  warnings:
    - - "Severity # violation"
      - "Field # links.0"
      - "Need path # IMPL_1"
      - "Schema path # extra_links > schema > properties > links > items > pattern"
      - "Schema message # 'SPEC_1' does not match '^[A-Z0-9_]{10,}'"
      - sphinx8: ["sn_schema.extra_link_fail"]

min_items:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_links]]
    option = "links"
    outgoing = "links"
    incoming = "linked by"
    schema.type = "array"
    schema.minItems = 1
  rst: |
    .. spec:: title
        :id: SPEC_1

    .. impl:: title
        :id: IMPL_1
        :links: SPEC_1
  warnings: []

min_items_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_links]]
    option = "links"
    outgoing = "links"
    incoming = "linked by"
    schema.type = "array"
    schema.minItems = 2
  rst: |
    .. spec:: title
        :id: SPEC_1

    .. impl:: title
        :id: IMPL_1
        :links: SPEC_1
  warnings:
    - - "Severity # violation"
      - "Field # links"
      - "Need path # IMPL_1"
      - "Schema path # extra_links > schema > properties > links > minItems"
      - "Schema message # ['SPEC_1'] is too short"
      - sphinx8: ["sn_schema.extra_link_fail"]

max_items:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_links]]
    option = "links"
    outgoing = "links"
    incoming = "linked by"
    schema.type = "array"
    schema.maxItems = 1
  rst: |
    .. spec:: title
        :id: SPEC_1

    .. impl:: title
        :id: IMPL_1
        :links: SPEC_1
  warnings: []

max_items_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_links]]
    option = "links"
    outgoing = "links"
    incoming = "linked by"
    schema.maxItems = 1
  rst: |
    .. spec:: title
        :id: SPEC_1

    .. spec:: title
        :id: SPEC_2

    .. impl:: title
        :id: IMPL_1
        :links: SPEC_1, SPEC_2
  warnings:
    - - "Severity # violation"
      - "Field # links"
      - "Need path # IMPL_1"
      - "Schema path # extra_links > schema > properties > links > maxItems"
      - "Schema message # ['SPEC_1', 'SPEC_2'] is too long"
      - sphinx8: ["sn_schema.extra_link_fail"]

contains:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_links]]
    option = "links"
    outgoing = "links"
    incoming = "linked by"
    schema.contains = { pattern = "^SPEC_" }
  rst: |
    .. spec:: title
        :id: SPEC_1

    .. impl:: title
        :id: IMPL_1
        :links: SPEC_1
  warnings: []

contains_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_links]]
    option = "links"
    outgoing = "links"
    incoming = "linked by"
    schema.contains = { pattern = "^REQ_" }
  rst: |
    .. spec:: title
        :id: SPEC_1

    .. impl:: title
        :id: IMPL_1
        :links: SPEC_1
  warnings:
    - - "Severity # violation"
      - "Field # links"
      - "Need path # IMPL_1"
      - "Schema path # extra_links > schema > properties > links > contains"
      - "Schema message # ['SPEC_1'] does not contain items matching the given schema"
      - sphinx8: ["sn_schema.extra_link_fail"]

min_contains:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_links]]
    option = "links"
    outgoing = "links"
    incoming = "linked by"
    schema.contains = { pattern = "^SPEC_" }
    schema.minContains = 1
  rst: |
    .. spec:: title
        :id: SPEC_1

    .. impl:: title
        :id: IMPL_1
        :links: SPEC_1
  warnings: []

min_contains_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_links]]
    option = "links"
    outgoing = "links"
    incoming = "linked by"
    schema.type = "array"
    schema.contains = { pattern = "^SPEC_" }
    schema.minContains = 2
  rst: |
    .. spec:: title
        :id: SPEC_1

    .. impl:: title
        :id: IMPL_1
        :links: SPEC_1
  warnings:
    - - "Severity # violation"
      - "Field # links"
      - "Need path # IMPL_1"
      - "Schema path # extra_links > schema > properties > links > contains"
      - "Schema message # Too few items match the given schema (expected at least 2 but only 1 matched)"
      - sphinx8: ["sn_schema.extra_link_fail"]

max_contains:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_links]]
    option = "links"
    outgoing = "links"
    incoming = "linked by"
    schema.contains = { pattern = "^SPEC_" }
    schema.maxContains = 2
  rst: |
    .. spec:: title
        :id: SPEC_1

    .. spec:: title
        :id: SPEC_2

    .. impl:: title
        :id: IMPL_1
        :links: SPEC_1, SPEC_2
  warnings: []

max_contains_error:
  conf: |
    extensions = ["sphinx_needs"]
    needs_from_toml = "ubproject.toml"
    suppress_warnings = ["needs.beta"]
  ubproject: |
    [[needs.extra_links]]
    option = "links"
    outgoing = "links"
    incoming = "linked by"
    schema.type = "array"
    schema.contains = { pattern = "^SPEC_" }
    schema.maxContains = 1
  rst: |
    .. spec:: title
        :id: SPEC_1

    .. spec:: title
        :id: SPEC_2

    .. impl:: title
        :id: IMPL_1
        :links: SPEC_1, SPEC_2
  warnings:
    - - "Severity # violation"
      - "Field # links"
      - "Need path # IMPL_1"
      - "Schema path # extra_links > schema > properties > links > contains"
      - "Schema message # Schema message: Too many items match the given schema (expected at most 1)"
      - sphinx8: ["sn_schema.extra_link_fail"]
